CREATE DATABASE COMPANY;
USE COMPANY;
CREATE TABLE EMPLOYEE_DETAILES (
EMPLOYEE_ID TINYINT,
	EMPLOYEE_NAME VARCHAR(20),
	EMPLOYEE_ADDRESS VARCHAR(30),
	BLOOD_GROUP VARCHAR(20),
	DOB YEAR,
	SALARY DOUBLE
);
DESCRIBE EMPLOYEE_DETAILES;
SELECT * FROM EMPLOYEE_DETAILES;
INSERT INTO EMPLOYEE_DETAILES VALUE (1,'VARSHA','BANGALORE','A+VE',2000,2500.5);
SELECT * FROM EMPLOYEE_DETAILES;
INSERT INTO EMPLOYEE_DETAILES VALUE (2,'SANDYA','TUMKUR','B+VE',2001,2500.0);
INSERT INTO EMPLOYEE_DETAILES VALUE (3,'VINDYA','HASSAN','AB+VE',1999,3000.8);
INSERT INTO EMPLOYEE_DETAILES VALUE (4,'DANYA','MANDYA','AB-VE',1998,3200.8);
INSERT INTO EMPLOYEE_DETAILES VALUE (5,'KAVYA','BANGALORE','A-VE',1999,2500.5);
SELECT * FROM EMPLOYEE_DETAILES;
SELECT EMPLOYEE_NAME FROM EMPLOYEE_DETAILES WHERE SALARY < 3000.8;
SELECT EMPLOYEE_NAME FROM EMPLOYEE_DETAILES WHERE SALARY > 3200.8;
SELECT * FROM EMPLOYEE_DETAILES;
SELECT * FROM EMPLOYEE_DETAILES WHERE EMPLOYEE_ID = 3;
SELECT COUNT(*) FROM EMPLOYEE_DETAILES;
ALTER TABLE EMPLOYEE_DETAILES ADD COLUMN PH_NUMBER LONG;
SELECT * FROM EMPLOYEE_DETAILES;
INSERT INTO EMPLOYEE_DETAILES VALUE (6,'ABC','BANGALORE','A+VE',2000,2500.5,23,234567898);
SELECT * FROM EMPLOYEE_DETAILES;
ALTER TABLE EMPLOYEE_DETAILES DROP COLUMN PH_NO;
SELECT * FROM EMPLOYEE_DETAILES;
ALTER TABLE EMPLOYEE_DETAILES ADD COLUMN PH_NO INT AFTER EMPLOYEE_ADDRESS;
SELECT * FROM EMPLOYEE_DETAILES;
ALTER TABLE EMPLOYEE_DETAILES RENAME COLUMN DOB to DATE_OF_BIRTH;
SELECT * FROM EMPLOYEE_DETAILES;
ALTER TABLE EMPLOYEE_DETAILES RENAME TO EMPLOYEE_INFORMATION;
SELECT * FROM EMPLOYEE_INFORMATION;
TRUNCATE EMPLOYEE_INFORMATION;
SELECT * FROM EMPLOYEE_INFORMATION;
DROP TABLE EMPLOYEE_INFORMATION;
SELECT * FROM EMPLOYEE_INFORMATION;
DROP DATABASE COMPANY;
CREATE DATABASE COMPANY;
USE COMPANY;
CREATE TABLE EMPLOYEE_DETAILES1 (
EMPLOYEE_ID TINYINT PRIMARY KEY,
	EMPLOYEE_NAME VARCHAR(20),
	EMPLOYEE_ADDRESS VARCHAR(30),
	BLOOD_GROUP VARCHAR(20),
    BIRTH_YEAR YEAR CHECK(BIRTH_YEAR  > 2000),
	SALARY DOUBLE
);
DESCRIBE EMPLOYEE_DETAILES1; 
SELECT * FROM EMPLOYEE_DETAILES1;
INSERT INTO EMPLOYEE_DETAILES1 VALUE (1,'ABC','XYZ','A+VE','2002',20000.0);

INSERT INTO EMPLOYEE_DETAILES1 VALUE (2,'VINDYA','BANGALORE','AB+VE','2001',22000.8);

INSERT INTO EMPLOYEE_DETAILES1 VALUE (3,'SANDYA','MANGALORE','A-VE','2003',32005.0);

INSERT INTO EMPLOYEE_DETAILES1 VALUE (4,'KAVYA','MANDYA','AB-VE','2002',20000.0);

INSERT INTO EMPLOYEE_DETAILES1 VALUE (5,'SHARANYA','BANGALORE','O+VE','2006',40000.0);

SELECT * FROM EMPLOYEE_DETAILES1;

SELECT * FROM EMPLOYEE_DETAILES1 WHERE BLOOD_GROUP IS NULL;
SELECT * FROM EMPLOYEE_DETAILES1 WHERE BLOOD_GROUP IS NOT NULL;

ALTER TABLE EMPLOYEE_DETAILES1 MODIFY EMPLOYEE_NAME VARCHAR(35) NOT NULL;

SELECT DISTINCT EMPLOYEE_ADDRESS FROM EMPLOYEE_DETAILES1;

UPDATE EMPLOYEE_DETAILES1 SET BLOOD_GROUP = 'O-VE' WHERE EMPLOYEE_ID = 1;

DELETE FROM EMPLOYEE_DETAILES1 WHERE EMPLOYEE_ID = 1;

UPDATE EMPLOYEE_DETAILES1 SET BLOOD_GROUP = 'A+VE' WHERE EMPLOYEE_ID = 2;

SELECT * FROM EMPLOYEE_DETAILES1;

SELECT * FROM EMPLOYEE_DETAILES1 ORDER BY SALARY;

SELECT * FROM EMPLOYEE_DETAILES1 ORDER BY SALARY DESC;

SELECT * FROM EMPLOYEE_DETAILES1 LIMIT 5;

SELECT * FROM EMPLOYEE_DETAILES1 ORDER BY EMPLOYEE_ID DESC LIMIT 5;

SELECT * FROM EMPLOYEE_DETAILES1 WHERE EMPLOYEE_NAME IN('KAVYA','SHARANYA');

SELECT * FROM EMPLOYEE_DETAILES1 WHERE SALARY BETWEEN 30000.0 AND 38000.0;

SELECT * FROM EMPLOYEE_DETAILES1 WHERE SALARY <= 40000.0;

SELECT SALARY AS PAY_SLIP FROM EMPLOYEE_DETAILES1 WHERE SALARY > 30000.0;

SELECT * FROM EMPLOYEE_DETAILES1 WHERE EMPLOYEE_ADDRESS LIKE '%BANGALORE';

SELECT * FROM EMPLOYEE_DETAILES1 WHERE EMPLOYEE_ADDRESS LIKE 'TUMKUR%';

SELECT * FROM EMPLOYEE_DETAILES1 WHERE EMPLOYEE_ADDRESS LIKE '_MANGALORE';

SELECT * FROM EMPLOYEE_DETAILES1 WHERE EMPLOYEE_ADDRESS LIKE '_HASSAN%';

-- date and time function

SELECT CURDATE(); -- to get current date
SELECT CURTIME(); -- TO GET CURRENT TIME
SELECT NOW(); -- TO GET BOTH CURRENT DATE AAND TIME
SELECT DATE(NOW()); -- IT WILL EXTRACT ONLY DATE
SELECT TIME(NOW()); -- IT WILL EXTRACT ONLY TIME
SELECT DAYOFMONTH(NOW()); -- IT WILL EXTRACT  THE DAY OF MONTH
SELECT MONTH(NOW()); -- IT WILL GIVE THE MONTHS
SELECT YEAR(NOW()); -- IT WILL GIVE THE CURRENT YEAR
SELECT WEEK(NOW()); -- IT WILL GIVE THE NUMBER OF WEEK PASSED TILL NOW
SELECT DAYNAME(NOW()); -- IT WILL GIVE THE NAME OF TODAYS DAY
SELECT DAYOFWEEK(NOW()); -- IT WILL GIVE THE DAY NUMBER PASSED IN THE CURRENT WEEK
SELECT DAYOFYEAR(NOW()); -- IT WILL GIVE THE NUMBER OF DAYS PASSED IN CURRENT YEAR

-- AGREGATE FUNCTION

SELECT MAX(SALARY) AS maximum FROM EMPLOYEE_DETAILES1; -- it will give the maximum price from the book_price
SELECT MIN(SALARY) AS Minumum FROM EMPLOYEE_DETAILES1; -- it will give the minimum price from the book_price
SELECT AVG(SALARY) AS average FROM EMPLOYEE_DETAILES1; -- it will give the average
SELECT SUM(SALARY) AS Total FROM EMPLOYEE_DETAILES1; -- it will give the total sum
SELECT COUNT(*) AS Total_count FROM EMPLOYEE_DETAILES1; -- it will give the total count

SELECT EMPLOYEE_ADDRESS, COUNT(EMPLOYEE_NAME) AS Count_EMPLOYEE_ADDRESS FROM EMPLOYEE_DETAILES1 GROUP BY EMPLOYEE_ADDRESS;

SELECT EMPLOYEE_NAME, COUNT(SALARY) AS Count_SALARY FROM EMPLOYEE_DETAILES1 GROUP BY SALARY;

SELECT BIRTH_YEAR, COUNT(EMPLOYEE_NAME) AS count_EMPLOYEE_NAME, EMPLOYEE_NAME FROM EMPLOYEE_DETAILES1 WHERE BIRTH_YEAR > 2002 GROUP BY BIRTH_YEAR;

